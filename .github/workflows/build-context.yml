name: Setup Build Context

on:
  workflow_call:
    outputs:
      image_tag:
        description: "Sanitized image tag"
        value: ${{ jobs.setup.outputs.image_tag }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    env:
      CI_DEFAULT_BRANCH: 'main'
      CI_COMMIT_REF_NAME: ${{ github.ref_name }}
      CI_COMMIT_TAG: ${{ github.event.release.tag_name || '' }}

    steps:
      - name: Set IMAGE_TAG
        id: set-tag
        run: |
          if [ -z "${IMAGE_TAG}" ]; then
            if [ "$CI_COMMIT_REF_NAME" == "$CI_DEFAULT_BRANCH" ]; then
              IMAGE_TAG="latest"
            elif [ -n "$CI_COMMIT_TAG" ]; then
              NOSLASH=$(echo "$CI_COMMIT_TAG" | tr -s / - )
              IMAGE_TAG="${NOSLASH//[^a-zA-Z0-9\-\.]/}"
            else
              NOSLASH=$(echo "$CI_COMMIT_REF_NAME" | tr -s / - )
              IMAGE_TAG="branch-${NOSLASH//[^a-zA-Z0-9\-]/}"
            fi
          fi
          echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
      - name: Read Harbor Config
        id: harbor
        env:
          HARBOR_CREDENTIALS: ${{ secrets.HARBOR_CREDENTIALS}}
          HARBOR_HOST: ${{ secrets.HARBOR_HOST}}
        run: |
            CONFIG_FILE=${{ inputs.harbor_config }}
            while IFS='=' read -r key value; do
              case "$key" in
                PROJECT)
                  export HARBOR_PROJECT="$value"
                  ;;
                USER)
                  RAW_USER="$value"  # Merken ohne robot$
                  export HARBOR_USERNAME="robot\$${value}" 
                  ;;
              esac
            done < "$CONFIG_FILE"
            
            if [[ -z "$HARBOR_CREDENTIALS" ]]; then
              echo "Fehler: HARBOR_CREDENTIALS ist nicht gesetzt."
              exit 1
            fi
            
            DECODED_JSON=$(echo "$HARBOR_CREDENTIALS" | base64 -d)
            
            HARBOR_PASSWORD=$(echo "$DECODED_JSON" | jq -r --arg user "$RAW_USER" '.[$user]')
            
            # Fehlerbehandlung: Falls Passwort leer oder null ist
            if [[ -z "$HARBOR_PASSWORD" || "$HARBOR_PASSWORD" == "null" ]]; then
              echo "Fehler: Kein Passwort fÃ¼r Benutzer $RAW_USER gefunden."
              exit 1
            fi

            echo "harbor_project=$HARBOR_PROJECT" >> "$GITHUB_OUTPUT"
            echo "harbor_username=$HARBOR_USERNAME" >>"$GITHUB_OUTPUT"
            echo "harbor_password=$HARBOR_PASSWORD" >> "$GITHUB_OUTPUT"
            echo "harbor_host=$HARBOR_HOST" >> "$GITHUB_OUTPUT"
